buildscript {
  dependencies {
    classpath group: 'jakarta.annotation', name: 'jakarta.annotation-api', version: '1.3.5'
  }
}

plugins {
  id 'org.springframework.boot' version '2.5.7'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'java'
  id 'war'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
  all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
  all*.exclude group: 'org.springframework.boot', module: 'logback-classic'
}

repositories {
  mavenCentral()
  maven { url('https://repo.spring.io/milestone') }
  maven { url('https://repo.spring.io/release/') }
  maven { url('https://nexus.mkeasy.kro.kr/repository/my-repo-group/') }
}

version = '0.1'
sourceCompatibility = '1.8'

bootJar { enabled = false }
jar { enabled = true }

sourceSets {
  main.java.srcDir "$buildDir/generated/sources/annotationProcessor/java/main"
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
  implementation.exclude module: 'spring-boot-starter-logging'
}

dependencies {
  implementation 'javax.annotation:javax.annotation-api:1.3.2'
  providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  annotationProcessor 'org.projectlombok:lombok'
  annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa'
  annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
  annotationProcessor 'jakarta.annotation:jakarta.annotation-api:1.3.5'

  implementation 'com.querydsl:querydsl-core:5.0.0'
  implementation 'com.querydsl:querydsl-jpa:5.0.0'
  compileOnly 'com.querydsl:querydsl-apt:5.0.0'

  compileOnly 'org.projectlombok:lombok'
  testImplementation 'org.projectlombok:lombok'

  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-log4j2:2.5.4'
  implementation 'org.apache.commons:commons-configuration2:2.7'
  implementation 'commons-lang:commons-lang:2.6'
  implementation 'org.apache.commons:commons-lang3:3.12.0'
  implementation 'joda-time:joda-time:2.10.10'
  implementation 'javax.servlet:javax.servlet-api:4.0.1'
  implementation 'commons-io:commons-io:2.8.0'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'

  implementation 'org.springframework.boot:spring-boot-test-autoconfigure'
  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude(group: 'com.vaadin.external.google', module: 'android-json')
    exclude(group: 'org.junit.vintage')
  }
  implementation('joda-time:joda-time:2.10.10')

  implementation 'org.bouncycastle:bcprov-jdk15on:1.61'

  implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
  implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1'

  compileOnly 'com.h2database:h2' // 서버모드로 사용하기 위해서는 runtimeOnly 를 compile 로 변경해야 합니다.
  runtimeOnly 'mysql:mysql-connector-java'

  compileOnly 'org.json:json:20180813'
  implementation 'org.springframework.boot:spring-boot-starter-json'

  implementation 'org.mybatis:mybatis:3.5.2'
  implementation 'org.mybatis:mybatis-spring:2.0.2'

  implementation 'org.springframework:spring-context'
  implementation 'org.springframework:spring-beans'

  implementation 'com.hubspot.jinjava:jinjava:2.5.2'
  implementation 'net.sf.json-lib:json-lib:2.4:jdk15'
  implementation 'com.googlecode.json-simple:json-simple:1.1.1'
  implementation 'commons-httpclient:commons-httpclient:3.1'
  implementation 'org.jsoup:jsoup:1.14.2'
  implementation 'com.google.code.gson:gson:2.8.6'
  // implementation 'eu.bitwalker:UserAgentUtils:1.18'
  // implementation 'com.fasterxml.uuid:java-uuid-generator:3.1.3'
  // implementation 'org.apache.httpcomponents:httpclient:4.5.13'

  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.3'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.3'
  implementation 'com.fasterxml.jackson.core:jackson-annotations:2.10.3'
  implementation 'com.fasterxml.jackson.core:jackson-core:2.10.3'

  implementation 'javax.servlet:jstl:1.2'
  implementation 'taglibs:standard:1.1.2'
  implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
  implementation 'org.webjars:AdminLTE:3.0.5'
  implementation 'org.webjars:font-awesome:5.0.6'

  implementation 'org.apache.poi:poi:3.17'
  implementation 'org.apache.poi:poi-ooxml:3.16'

  // implementation 'org.elasticsearch.client:transport:7.4.1'
  // implementation 'org.elasticsearch.client:elasticsearch-rest-client:7.4.1'

  // implementation 'org.springframework:spring-core'
  // implementation 'org.springframework:spring-jdbc'
  // implementation 'org.springframework:spring-tx'

  implementation 'io.mkeasy:busyBox:1.2.8'

  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

  // implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'
  implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
  runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2', 'io.jsonwebtoken:jjwt-jackson:0.11.2'
  implementation 'com.nimbusds:nimbus-jose-jwt:3.10'


}

test {
  useJUnitPlatform()
  exclude {'**/*'}
}
